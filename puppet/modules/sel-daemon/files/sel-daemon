# lib/SEL-Daemon
# Install and start **SEL-Daemon** service

# To enable a minimal set of SEL-Daemon features, add the following to localrc:
#   enable_service sel-daemon
#

# stack.sh
# ---------
# install_sel-daemon
# configure_sel-daemon
# init_sel-daemon
# start_sel-daemon
# stop_sel-daemon
# cleanup_sel-daemon

# Save trace setting
XTRACE=$(set +o | grep xtrace)
set +o xtrace

# Set up default directories
SEL_DAEMON_DIR=$DEST/sel-daemon

# Tell Tempest this project is present
TEMPEST_SERVICES+=,sel-daemon

# configure_sel-daemon - Set config files, create data dirs, etc
#function configure_sel-daemon {
#    setup_develop $SEL_DAEMON_DIR
#}

# install_sel-daemon - Collect source and prepare
#function install_sel-daemon {
#	
#}

# start_sel-daemon - Start running processes, including screen
function start_sel-daemon {
    sudo rm -r -fd /usr/local/lib/python2.7/dist-packages/Crypto/
    pip_install 'ecdsa'
    pip_install 'Flask'
    python $SEL_DAEMON_DIR/init.py
    screen_it sel-daemon "python $SEL_DAEMON_DIR/daemon.py"
    # "uwsgi --master --emperor --enable-threads $SEL_DAEMON_DIR/config/daemon.ini"
}

# stop_sel-daemon - Stop running processes
function stop_sel-daemon {
    # This will eventually be refactored to work like
    # Solum and Manila (script to kick off a wsgiref server)
    # For now, this will stop uWSGI rather than have it hang
    killall -9 uwsgi

    # This cleans up the PID file, but uses pkill so SEL-Daemon
    # uWSGI emperor process doesn't actually stop
    screen_stop sel-daemon
}

# Restore xtrace
$XTRACE

# Local variables:
# mode: shell-script
# End:
